import{r as o,j as r}from"./iconBase-3b7d111a.js";import{C as g,a as c,L as u,P as f,e as x,p as h,b as L,c as b,f as C,D as y}from"./index-03a409d8.js";import{d as j}from"./index-4e1b0b72.js";import{L as D}from"./index-bc7dc0c5.js";import"./index-67732e07.js";import"./styled-components.browser.esm-e75c5c18.js";import"./formik.esm-ac5c4b53.js";import"./index-39e354ab.js";import"./config-bb52a63e.js";import"./DataTable-aa997715.js";import"./index.esm-047accf7.js";import"./index.esm-0a3c5416.js";import"./index-602607c3.js";import"./index-7c3fcb85.js";import"./index-1521be78.js";import"./index-a4924570.js";import"./modalStore-d17d7ffe.js";import"./react-toastify.esm-9ef0ae5c.js";import"./getMaximiumRol-3d17b9cf.js";import"./capitalize-1790f93b.js";import"./dayjs.min-5ff67288.js";import"./index-5799cdaf.js";import"./index-1773b9ca.js";g.register(c,u,f,x,h,L,b);const T=i=>{const{orders:a,setOrders:n}=i,[p,l]=o.exports.useState(new Date),[m,s]=o.exports.useState(!1);async function d(t){try{l(t),s(!0);const e=await j.findAllOrdersByYearMonth(t.getFullYear(),t.getMonth()+1);n(e.data)}catch(e){console.log(e)}finally{s(!1)}}return m?r.exports.jsx(D,{loading:!0}):r.exports.jsxs(o.exports.Fragment,{children:[r.exports.jsx(C,{options:{responsive:!0,plugins:{legend:{display:!1}}},data:{labels:a.orders.map(t=>t.day),datasets:[{label:"Orders",data:a.orders.map(t=>t.total?t.total:0),borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.5)"}]}}),r.exports.jsx(y,{className:"mt-4",value:p,onChange:d})]})};export{T as default};
